/*
 * 开放API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dtsre.api.v1.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.dtsre.api.v1.client.JSON;


/**
 * DataPermission
 */
@JsonPropertyOrder({
  DataPermission.JSON_PROPERTY_ALL,
  DataPermission.JSON_PROPERTY_PERMISSION_ID,
  DataPermission.JSON_PROPERTY_TAG_SET,
  DataPermission.JSON_PROPERTY_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-19T14:34:25.795+08:00[Asia/Shanghai]")
public class DataPermission {
  public static final String JSON_PROPERTY_ALL = "all";
  private Boolean all;

  public static final String JSON_PROPERTY_PERMISSION_ID = "permissionId";
  private Long permissionId;

  public static final String JSON_PROPERTY_TAG_SET = "tagSet";
  private List<String> tagSet = new ArrayList<>();

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public DataPermission() { 
  }

  public DataPermission all(Boolean all) {
    this.all = all;
    return this;
  }

   /**
   * 数据业务类型是否全选
   * @return all
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "数据业务类型是否全选")
  @JsonProperty(JSON_PROPERTY_ALL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAll() {
    return all;
  }


  @JsonProperty(JSON_PROPERTY_ALL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAll(Boolean all) {
    this.all = all;
  }


  public DataPermission permissionId(Long permissionId) {
    this.permissionId = permissionId;
    return this;
  }

   /**
   * 数据项Id
   * @return permissionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "数据项Id")
  @JsonProperty(JSON_PROPERTY_PERMISSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getPermissionId() {
    return permissionId;
  }


  @JsonProperty(JSON_PROPERTY_PERMISSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPermissionId(Long permissionId) {
    this.permissionId = permissionId;
  }


  public DataPermission tagSet(List<String> tagSet) {
    this.tagSet = tagSet;
    return this;
  }

  public DataPermission addTagSetItem(String tagSetItem) {
    this.tagSet.add(tagSetItem);
    return this;
  }

   /**
   * 数据项类型
   * @return tagSet
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "[zk_mntr_data, zk_biz_log_data]", required = true, value = "数据项类型")
  @JsonProperty(JSON_PROPERTY_TAG_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getTagSet() {
    return tagSet;
  }


  @JsonProperty(JSON_PROPERTY_TAG_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTagSet(List<String> tagSet) {
    this.tagSet = tagSet;
  }


  public DataPermission type(String type) {
    this.type = type;
    return this;
  }

   /**
   * 数据业务类型
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "appname/alert/dashboard", required = true, value = "数据业务类型")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  /**
   * Return true if this DataPermission object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataPermission dataPermission = (DataPermission) o;
    return Objects.equals(this.all, dataPermission.all) &&
        Objects.equals(this.permissionId, dataPermission.permissionId) &&
        Objects.equals(this.tagSet, dataPermission.tagSet) &&
        Objects.equals(this.type, dataPermission.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(all, permissionId, tagSet, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataPermission {\n");
    sb.append("    all: ").append(toIndentedString(all)).append("\n");
    sb.append("    permissionId: ").append(toIndentedString(permissionId)).append("\n");
    sb.append("    tagSet: ").append(toIndentedString(tagSet)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

