/*
 * 开放API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dtsre.api.v1.client.api;

import com.dtsre.api.v1.client.*;
import com.dtsre.api.v1.client.auth.*;
import com.dtsre.api.v1.client.model.MetricMetaUpdateParam;
import com.dtsre.api.v1.client.model.MetricSendParam;
import com.dtsre.api.v1.client.model.ROfListOfMetricVO;
import com.dtsre.api.v1.client.model.ROfMetricMetadataVO;
import com.dtsre.api.v1.client.model.ROfTagSet;
import com.dtsre.api.v1.client.model.ROfTimeseriesVO;
import com.dtsre.api.v1.client.model.ROfboolean;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetricApi
 */
public class MetricApiTest {

    private final MetricApi api = new MetricApi();

    /**
     * 查询指标元数据
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMetricMetadataTest() throws ApiException {
        //String metric = null;
        //ROfMetricMetadataVO response = api.getMetricMetadata(metric);
        // TODO: test validations
    }

    /**
     * 查询指标的标签
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMetricTagsTest() throws ApiException {
        //String metric = null;
        //ROfTagSet response = api.listMetricTags(metric);
        // TODO: test validations
    }

    /**
     * 查询指标列表
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMetricsTest() throws ApiException {
        //String category = null;
        //Integer window = null;
        //ROfListOfMetricVO response = api.listMetrics(category, window);
        // TODO: test validations
    }

    /**
     * 查询指标时间序列
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryMetricsTest() throws ApiException {
        //String aggregator = null;
        //Long end = null;
        //String metric = null;
        //Long start = null;
        //List<String> dimensions = null;
        //String filter = null;
        //ROfTimeseriesVO response = api.queryMetrics(aggregator, end, metric, start, dimensions, filter);
        // TODO: test validations
    }

    /**
     * 上报指标数据
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendMetricsTest() throws ApiException {
        //MetricSendParam param = null;
        //ROfboolean response = api.sendMetrics(param);
        // TODO: test validations
    }

    /**
     * 指标编辑
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMetricTest() throws ApiException {
        //MetricMetaUpdateParam param = null;
        //ROfboolean response = api.updateMetric(param);
        // TODO: test validations
    }

}
